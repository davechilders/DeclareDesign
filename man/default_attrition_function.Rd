% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/declare_attrition.R
\name{default_attrition_function}
\alias{default_attrition_function}
\title{Default attrition function}
\usage{
default_attrition_function(data, condition_names, assignment_variable_name,
  proportion_always_reporters = NULL, reporting_proportions = NULL)
}
\arguments{
\item{data}{A dataframe, often created by \code{\link{draw_population}}.}

\item{condition_names}{A vector describing the conditions to which subjects can be assigned. Often inherited from \code{\link{declare_attrition}}.}

\item{assignment_variable_name}{The name of the treatment variable.}

\item{proportion_always_reporters}{The proportion of the sample that reports their outcomes regardless of their treatment condition.}

\item{reporting_proportions}{A vector of proportions that describes the proportion of subjects who report in each condition. Each entry in this vector must be a number between 0 and 1.}
}
\description{
This default function allows the user to specifiy two common forms of attrition.  If you use the proportion_always_reporters argument, you specificy the portion of the experimental sample that reports their outcomes, regardless of their treatment assignment.  If you use the reporting_proportions argument, you provide a vector of proportions that is equal in length to condition_names.
}
\examples{
population <- declare_population(noise = declare_variable(), size = 1000)
sampling <- declare_sampling(n = 500)
attrition <- declare_attrition(condition_names = c(0,1), 
                               outcome_variable_name = "R",
                               assignment_variable_name = "Z", 
                               reporting_proportions = c(.5, .7))

potential_outcomes <- declare_potential_outcomes(formula = Y ~ 5 + .5*Z + noise,
                                                 condition_names = c(0, 1),
                                                 assignment_variable_name = "Z", 
                                                 attrition = attrition)
                                                   
assignment <- declare_assignment(condition_names = c(0,1))

pop_draw <- draw_population(population = population)
smp_draw <- draw_sample(data = pop_draw, sampling = sampling)
smp_draw <- assign_treatment(data = smp_draw, assignment = assignment)
smp_draw <- draw_outcome(data = smp_draw, potential_outcomes = potential_outcomes,
                         attrition = attrition)
with(smp_draw, table(Z, R))

}

