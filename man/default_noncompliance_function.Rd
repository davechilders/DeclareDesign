% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/declare_noncompliance.R
\name{default_noncompliance_function}
\alias{default_noncompliance_function}
\title{Built-in noncompliance function (one-sided noncompliance)}
\usage{
default_noncompliance_function(data, condition_names, baseline_condition,
  treatment_variable_name, compliance_proportions)
}
\arguments{
\item{data}{A dataframe, often created by \code{\link{draw_population}}.}

\item{condition_names}{A vector describing the conditions to which subjects can be assigned. Often inherited from \code{\link{declare_noncompliance}}.}

\item{baseline_condition}{The value of condition_names that represents the "baseline" condition. This is the condition that subjects will be in if they do not comply with their treatment status. Often a "control" condition.}

\item{treatment_variable_name}{The name of the treatment variable.}

\item{compliance_proportions}{A vector of proportions that describes the proportion of subjects who comply in each condition. Each entry in this vector must be a number between 0 and 1.}
}
\description{
Built-in noncompliance function (one-sided noncompliance)
}
\examples{
population <- declare_population(noise = declare_variable(), N = 1000)
sampling <- declare_sampling(n = 500)
noncompliance <- declare_noncompliance(condition_names = c(0,1), 
                                       treatment_variable_name = "Z", 
                                       compliance_proportions=c(1, .5), 
                                       baseline_condition=0)
assignment <- declare_assignment(condition_names = c(0,1))

pop_draw <- draw_population(population = population)
smp_draw <- draw_sample(data = pop_draw, sampling = sampling)
smp_draw <- assign_treatment(data = smp_draw, assignment = assignment)
smp_draw <- draw_outcome(data = smp_draw, potential_outcomes = noncompliance)

head(smp_draw)
with(smp_draw, table(Z, D))
}

